---
# Post-installation
# GIT Config
- name: Set GIT e-mail
  git_config:
    name: user.email
    scope: global
    value: "dalisoft@mail.ru"
- name: Set GIT username
  git_config:
    name: user.name
    scope: global
    value: "dalisoft"

# FNM Versions
- name: "List installed fnm versions"
  command: fnm ls
  register: fnmv_list
  changed_when: false
  check_mode: false
  tags:
    - install-fnm-version

- name: Installing fnm version
  shell: "fnm install {{ item }}"
  loop: "{{ fnm_versions }}"
  register: install_fnm_version
  until: install_fnm_version is successful
  when:
    - fnm_versions is defined
    - item not in fnmv_list.stdout
  tags:
    - install-fnm-version

# NPM Modules
- name: "List installed npm modules"
  command: npm list -g --depth=0
  register: npm_modules_installed
  changed_when: false
  check_mode: false
  tags:
    - install-fnm-version
- name: Installing npm modules
  npm:
    global: yes
    path: "~/.npm-global"
    name: "{{ item }}"
    state: present
  loop: "{{ npm_modules }}"
  register: install_npm_package
  until: install_npm_package is successful
  when: item not in npm_modules_installed.stdout
  tags:
    - install-npm-modules

# PIP Modules
- name: Installing pip modules
  pip:
    name: "{{ item }}"
    state: present
    executable: pip3
  loop: "{{ pip_modules }}"
  register: install_pip_module
  until: install_pip_module is successful
  tags:
    - install-pip-modules

# Post-installation
# SublimeText extensions
- name: Installing Sublime Text packages
  git:
    repo: "{{ item.git_url }}"
    dest: "{{ st_packages_dir }}/{{ item.name }}"
  loop: "{{ sublime_extensions_git }}"

# Language Server binaries for SublimeText
- name: Checking GoPLS
  stat:
    path: "~/go/bin/gopls"
  register: gopls_bin

- name: Installing Golang Program Language Server
  shell: GO111MODULE=on go get golang.org/x/tools/gopls@latest
  when: gopls_bin.stat.exists != true

# VSCodium Extensions

# Fix VSCodium extensions as VSCodium uses
# Open-VSX.org market url and there isn't available
# some of extensions
- name: Fix VSCodium extensions path
  become: true
  become_user: root
  script: "~/Desktop/config/scripts/fix-codium.py"
  args:
    executable: python3
  register: fix_vscodium
  until: fix_vscodium is successful

- name: "List installed VSCodium extensions"
  shell: codium --list-extensions
  register: codium_extensions_list
  changed_when: false
  check_mode: false
  when: fix_vscodium.changed

- name: Installing VSCodium extensions
  shell: "codium --install-extension {{ item }}"
  loop: "{{ vscodium_extensions }}"
  register: install_codium_extensions
  until: install_codium_extensions is successful
  when:
    - fix_vscodium.changed
    - item not in codium_extensions_list.stdout_lines
