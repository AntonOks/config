---
- name: Ensure wheel group is present
  group:
    name: wheel
    state: present

- name: Ensure wheel group has sudo privileges
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: "^%wheel"
    line: "%wheel ALL=(ALL:ALL) ALL"
    validate: "/usr/sbin/visudo -cf %s"

- name: Create the non-root user account
  user:
    name: "{{ username }}"
    password: "{{ password }}"
    shell: /bin/bash
    update_password: on_create
    groups: wheel
    append: yes

- name: Add local public key for key-based SSH authentication
  authorized_key:
    user: "{{ username }}"
    state: present
    key: "{{ ssh_public_key }}"

- name: Harden sshd configuration
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - regexp: "^#?PermitRootLogin"
      line: "PermitRootLogin no"
    - regexp: "^^#?PasswordAuthentication"
      line: "PasswordAuthentication no"
    - regexp: "^#?AllowAgentForwarding"
      line: "AllowAgentForwarding no"
    - regexp: "^#?AllowTcpForwarding"
      line: "AllowTcpForwarding no"
    - regexp: "^#?MaxAuthTries"
      line: "MaxAuthTries 2"
    - regexp: "^#?MaxSessions"
      line: "MaxSessions 2"
    - regexp: "^#?TCPKeepAlive"
      line: "TCPKeepAlive no"
    - regexp: "^#?UseDNS"
      line: "UseDNS no"
    - regexp: "^#?AllowAgentForwarding"
      line: "AllowAgentForwarding no"

- name: Restart sshd
  systemd:
    state: restarted
    daemon_reload: yes
    name: sshd

- name: Flush existing firewall rules
  iptables:
    flush: true

- name: Firewall rule - allow all loopback traffic
  iptables:
    action: append
    chain: INPUT
    in_interface: lo
    jump: ACCEPT

- name: Firewall rule - allow established connections
  iptables:
    chain: INPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT

- name: Firewall rule - allow port ping traffic
  iptables:
    chain: INPUT
    jump: ACCEPT
    protocol: icmp

- name: Firewall rule - allow port 22/SSH traffic
  iptables:
    chain: INPUT
    destination_port: 22
    jump: ACCEPT
    protocol: tcp

- name: Firewall rule - allow port 80/HTTP traffic
  iptables:
    chain: INPUT
    destination_port: 80
    jump: ACCEPT
    protocol: tcp

- name: Firewall rule - allow port 443/HTTPS traffic
  iptables:
    chain: INPUT
    destination_port: 443
    jump: ACCEPT
    protocol: tcp

- name: Firewall rule - drop any traffic without rule
  iptables:
    chain: INPUT
    jump: DROP

- name: Install `netfilter-persistent` && `iptables-persistent` packages
  package:
    name: "{{item}}"
    state: present
  loop:
    - iptables-persistent
    - netfilter-persistent
  when: ansible_os_family == "Debian"

- name: Override some basic fail2ban configurations
  copy:
    src: ../templates/jail.local.j2
    dest: /etc/fail2ban/jail.local
    owner: root
    group: root
    mode: 0644

- name: Creating a file with content
  copy:
    dest: /etc/fail2ban/templates/jail.local.j2
    content: |
      [DEFAULT]
      # Ban hosts for one hour:
      bantime = 3600

      # Override /etc/fail2ban/jail.d/00-firewalld.conf:
      banaction = iptables-multiport

      [sshd]
      enabled = true
      maxretry = 3
