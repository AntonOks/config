---
- import_tasks: ../arch/main.yml
  when: ansible_os_family == 'Archlinux'

- import_tasks: ../debian/main.yml
  when: ansible_os_family == 'Debian' or ansible_os_family == 'Pop!_OS'

- name: Ensure binaries temporarily folder exists
  file:
    path: ~/binaries
    state: directory

- name: Downloading binaries
  unarchive:
    src: "{{ item.link }}"
    dest: ~/binaries
    remote_src: yes
    list_files: yes
  with_items: "{{ binaries }}"
  register: install_binary
  until: install_binary is successful

- name: Executing binaries command
  shell: "{{ item.command }}"
  with_items: "{{ binaries }}"
  when: command in item
  args:
    chdir: ~/binaries
  register: cmd_binary
  until: cmd_binary is successful

- name: Copy binaries to user path
  copy:
    src: "~/binaries/{{ item.name }}"
    dest: "/usr/local/bin/{{ item.name }}"
    remote_src: yes
    mode: u+x
  with_items: "{{ binaries }}"
  register: move_binary
  until: move_binary is successful

# Docker Post-installation steps
- name: Create docker group
  group:
    name: "docker"
    state: present
  register: docker_post_step_1
  until: docker_post_step_1 is successful

- name: Adding user {{ USER }} to docker group
  become: true
  become_user: root
  user:
    name: "{{ USER }}"
    group: "docker"
    append: "yes"
  register: docker_post_step_2
  until: docker_post_step_2 is successful
  when: docker_post_step_1.changed

- name: Apply group change of docker
  shell: newgrp docker
  register: docker_post_step_3
  until: docker_post_step_3 is successful
  when: docker_post_step_2.changed
