---
- name: Ensure binaries temporarily folder exists
  file:
    path: "{{ HOME }}/binaries"
    state: directory
  when: binaries|length > 0

- name: Linking direct binaries
  get_url:
    url: "{{ item.link }}"
    dest: "/usr/local/bin/{{ item.name }}"
    mode: u+x
    remote_src: yes
  loop: "{{ binaries }}"
  when:
    - binaries|length > 0
    - item.binary == True
    - item.direct != True
    - item.command is not defined
  register: download_direct_binary
  until: download_direct_binary is successful

- name: Initializing binaries
  unarchive:
    src: "{{ item.link }}"
    dest: "/usr/local/bin"
    mode: u+x
    remote_src: yes
  loop: "{{ binaries }}"
  when:
    - binaries|length > 0
    - item.binary != True
    - item.direct == True
  register: download_direct_zip_binary
  until: download_direct_zip_binary is successful

- name: Downloading binaries
  unarchive:
    src: "{{ item.link }}"
    dest: "{{ HOME }}/binaries"
    mode: u+x
    remote_src: yes
  loop: "{{ binaries }}"
  when:
    - binaries|length > 0
    - item.binary != True
    - item.direct != True
  register: download_binary
  until: download_binary is successful

- name: Executing binaries command
  shell: "{{ item.command }}"
  when:
    - binaries|length > 0
    - item.direct != True
    - item.command is defined
  loop: "{{ binaries }}"
  args:
    chdir: "{{ HOME }}/binaries"
  register: cmd_binary
  until: cmd_binary is successful

- name: Install binaries
  copy:
    src: "{{ HOME }}/binaries/{{ item.name }}"
    dest: "/usr/local/bin"
    mode: u+x
    remote_src: yes
  loop: "{{ binaries }}"
  register: install_binary
  until: install_binary is successful
  when:
    - binaries|length > 0
    - item.binary != True
    - item.direct != True

- name: Cleanup cache folder
  file:
    path: "{{ HOME }}/binaries"
    state: absent
  register: cleanup_binaries
  until: cleanup_binaries is successful
  when: binaries|length > 0

- name: Cleanup installed folder
  shell: rm -rf *.md LICENSE
  args:
    chdir: "/usr/local/bin"
  register: cleanup_binaries
  until: cleanup_binaries is successful
  when: binaries|length > 0
