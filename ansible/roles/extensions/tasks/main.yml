---
# Language Server binaries
- name: Checking GoPLS
  stat:
    path: ~/go/bin/gopls
  register: gopls_bin

- name: Installing Golang Program Language Server
  shell: GO111MODULE=on go get golang.org/x/tools/gopls@latest
  when: force_install is true or not gopls_bin.stat.exists

- name: Checking Rust Analyzer Language Server
  stat:
    path: /usr/local/bin/rust-analyzer
  register: rust_analyzer_bin

- name: Checking Reason Language Server
  stat:
    path: /usr/local/bin/reason-language-server
  register: reason_bin

- import_tasks: _debian.yml
  when: ansible_os_family == 'Debian'

- name: Installing Rust Analyzer Language Server on Linux
  get_url:
    url: "https://github.com/rust-analyzer/rust-analyzer/releases/latest/download/{{ ralsp }} "
    dest: /usr/local/bin/rust-analyzer
    mode: "0644"
  when: force_install is true or not reason_bin.stat.exists

- name: Downloading Reason Language Server on Linux
  get_url:
    url: "https://github.com/rust-analyzer/rust-analyzer/releases/latest/download/{{ rls }}"
    dest: ~/lsp/rls.zip
  register: rls_zip
  when: force_install is true or not reason_bin.stat.exists

- name: Extracting Reason Language Server on Linux
  unarchive:
    src: rls.zip
    dest: ~/lsp
  register: rls_unzip
  when: rls_zip.changed and force_install is true or not reason_bin.stat.exists

- name: Installing Reason Language Server on Linux
  copy:
    src: ~/lsp/rls/reason-language-server
    dest: /usr/local/bin/reason-language-server
    mode: "0644"
  when: rls_unzip.changed and force_install is true or not reason_bin.stat.exists

# SublimeText extensions
- name: Installing Sublime Text packages
  git:
    repo: "{{ item.git_url }}"
    dest: "{{ st_packages_dir }}/{{ item.name }}"
  with_items: "{{ sublime_extensions_git }}"

# VSCodium Extensions
- name: "List installed VSCodium extensions"
  command: "code --list-extensions"
  register: codium_extensions_list
  changed_when: false
  check_mode: false

- name: Installing VSCodium extensions
  shell: "code --install-extension {{ item }}"
  with_items: "{{ vscodium_extensions }}"
  register: install_codium_extensions
  until: install_codium_extensions is successful
  when: item not in codium_extensions_list.stdout_lines
